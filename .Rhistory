install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
bye()
`201605.citibike.tripdata` <- read.csv("~/Downloads/201605-citibike-tripdata.csv")
View(`201605.citibike.tripdata`)
plot(price)
#download monthly stock prices from Yahoo Finance
#from Jan 2001 until today for AAPL (Apple)
library(tseries)
price <- get.hist.quote('AAPL', start = "2001-01-01", compression = "m")
#print first and last 6 observations
head(price)
tail(price)
#plot the price time series
plot(price)
#download monthly stock prices from Yahoo Finance
#from Jan 2001 until today for AAPL (Apple)
library(tseries)
price <- get.hist.quote('AAPL', start = "2001-01-01", compression = "m")
#print first and last 6 observations
head(price)
tail(price)
#plot the price time series
plot(price)
#download monthly stock prices from Yahoo Finance
#from Jan 2001 until today for AAPL (Apple)
library(tseries)
price <- get.hist.quote('AAPL', start = "2001-01-01", compression = "m")
#print first and last 6 observations
head(price)
tail(price)
#plot the price time series
plot(price)
#download monthly stock prices from Yahoo Finance
#from Jan 2001 until today for AAPL (Apple)
library(tseries)
price<-get.hist.quote('AAPL', start = "2001-01-01", compression = "m")
#print first and last 6 observations
head(price)
tail(price)
#plot the price time series
plot(price)
#download monthly stock prices from Yahoo Finance
#from Jan 2001 until today for AAPL (Apple)
library(tseries)
price<-get.hist.quote('AAPL', start = "2001-01-01", compression = "m")
#print first and last 6 observations
head(price)
tail(price)
#plot the price time series
plot(price)
#download monthly stock prices from Yahoo Finance
#from Jan 2001 until today for AAPL (Apple)
library(tseries)
price <- get.hist.quote('AAPL', start = "2001-01-01", compression = "m")
#print first and last 6 observations
head(price)
tail(price)
#plot the price time series
plot(price)
startTime <- proc.time()
data <- fread("201605-citibike-tripdata.csv")
epsTime <- proc.time() - startTime # time elapsed
epsTime
library(swril)
library("swirl")
swirl()
setwf
setwd()
setwd("old.dir")
setwd()
setwd(dir)
setwd("dir")
setwd('Users/Honors/Dropbox/Fall-2016/Bus-4093H')
library("swirl")
swirl()
setwd("old.dir")
setwd
setwd
setwd("testdir")
setwd(old.dir)
?delete
'??delete'
unlink("testdir", recursive = truw)
unlink("testdir", recursive = true)
unlink("testdir", recursive = TRUE)
dir.create("Users/Honors/Dropbox/Fall-2016/Bus-4093H/Manipulating-Lending-Club-Dataset")
dir.create("Manipulating-Lending-Club-Dataset")
file.create("chand_bus4093_ass3.R")
file.rename('chand_bus4093_ass3.R', 'Manipulating-Lending-Club-Dataset/chand_bus4093_ass3.R')
file.rename('Manipulating-Lending-Club-Dataset/chand_bus4093_ass3.R', '/Users/Honors/Dropbox/Fall-2016/Bus-4093H/Manipulating-Lending-Club-Dataset/chand_bus4093_ass3.R')
file.rename('chand_bus4093_ass3.R', 'Manipulating-Lending-Club-Dataset/chand_bus4093_ass3.R')
setwd("Manipulating-Lending-Club-Dataset/chand_bus4093_ass3.R")
#Set Working Directory
setwd("/Users/raman/Dropbox/fall-2016/Bus-4093H/Manipulating-Lending-Club-Dataset")
#Install Packages
#install.packages("data.table")
#install.packages("dplyr")
#install.packages("magrittr")
#Load Packages
library("data.table")
library("dplyr")
library("magrittr")
#Import data and select variables
loanData <- "LoanStats3c.csv"
data <- fread(loanData, showProgress = FALSE,
select = c("addr_state", "annual_inc", "dti", "grade", "home_ownership", "int_rate", "loan_amnt", "term", "verification_status"),
na.strings = "NULL",
data.table = FALSE)
#Class Declaration
class(data$loan_amnt) <- "integer"
class(data$annual_inc) <- "integer"
class(data$dti) <- "numeric"
data$addr_state <- factor(data$addr_state)
data$grade <- factor(data$grade)
data$home_ownership <- factor(data$home_ownership)
data$term <- factor(data$term)
data$verification_status <- factor(data$verification_status)
head(nchar(data$int_rate)) #print the numer of characters of the first 6 elements in the interest rate field.
data$int_rate <- substr(data$int_rate, 1, 6) #delete the last character, %, from each element in the interest rate field.
class(data$int_rate) <- "numeric" #parse the class to numeric
#Print the Data Frame
str(data)
#Question No. 1
#Highest Degree of Homeownership by State
dataHomeOwnership <- data %>% group_by(addr_state, home_ownership) %>% summarize(count=n()) %>% arrange(desc(count))
head(dataHomeOwnership, 5)
#Question No. 2
#Highest Percentage Rentals by State
dataPercentRental <- data %>% group_by(addr_state, home_ownership) %>% summarize(count=n(), avgInterestRate = mean(int_rate, na.rm=TRUE)) %>% arrange(desc(avgInterestRate)) %>% filter(home_ownership=="RENT")
head(dataPercentRental, 5)
#Question No. 3
#High/Low Interest Rate on a Loan by State
dataAverageInterestRate <- data %>% group_by(addr_state) %>% summarize(avg.InterestRate = mean(int_rate, na.rm=TRUE)) %>% arrange(desc(avg.InterestRate))
head(dataAverageInterestRate, 5)
tail(dataAverageInterestRate, 5)
#Question No. 4
#Verification Status vs. Interest Rate on a Loan
dataLoan <- data %>% group_by(verification_status) %>% summarize(count=n(), avg.IntRate = mean(int_rate, na.rm=TRUE)) %>% arrange(desc(avg.IntRate))
data.table(dataLoan)
#Question No. 5
#Average Interest Rate vs. Debt to Income (DTI) Ratio
dataByDTI <- data %>% group_by(addr_state) %>% summarize(count=n(), averageIntRate = mean(int_rate, na.rm=TRUE), medianDTI = median(dti, na.rm=TRUE)) %>% arrange(desc(medianDTI))
head(dataByDTI, 5)
tail(dataByDTI, 5)
#Set Working Directory
setwd("/Users/raman/Dropbox/fall-2016/Bus-4093H/Manipulating-Lending-Club-Dataset")
#Install Packages
install.packages("data.table")
install.packages("dplyr")
install.packages("magrittr")
#Load Packages
library("data.table")
library("dplyr")
library("magrittr")
#Import data and select variables
loanData <- "LoanStats3c.csv"
data <- fread(loanData, showProgress = FALSE,
select = c("addr_state", "annual_inc", "dti", "grade", "home_ownership", "int_rate", "loan_amnt", "term", "verification_status"),
na.strings = "NULL",
data.table = FALSE)
#Class Declaration
class(data$loan_amnt) <- "integer"
class(data$annual_inc) <- "integer"
class(data$dti) <- "numeric"
data$addr_state <- factor(data$addr_state)
data$grade <- factor(data$grade)
data$home_ownership <- factor(data$home_ownership)
data$term <- factor(data$term)
data$verification_status <- factor(data$verification_status)
head(nchar(data$int_rate)) #print the numer of characters of the first 6 elements in the interest rate field.
data$int_rate <- substr(data$int_rate, 1, 6) #delete the last character, %, from each element in the interest rate field.
class(data$int_rate) <- "numeric" #parse the class to numeric
#Print the Data Frame
str(data)
#Question No. 1
#Highest Degree of Homeownership by State
dataHomeOwnership <- data %>% group_by(addr_state, home_ownership) %>% summarize(count=n()) %>% arrange(desc(count))
head(dataHomeOwnership, 5)
#Question No. 2
#Highest Percentage Rentals by State
dataPercentRental <- data %>% group_by(addr_state, home_ownership) %>% summarize(count=n(), avgInterestRate = mean(int_rate, na.rm=TRUE)) %>% arrange(desc(avgInterestRate)) %>% filter(home_ownership=="RENT")
head(dataPercentRental, 5)
#Question No. 3
#High/Low Interest Rate on a Loan by State
dataAverageInterestRate <- data %>% group_by(addr_state) %>% summarize(avg.InterestRate = mean(int_rate, na.rm=TRUE)) %>% arrange(desc(avg.InterestRate))
head(dataAverageInterestRate, 5)
tail(dataAverageInterestRate, 5)
#Question No. 4
#Verification Status vs. Interest Rate on a Loan
dataLoan <- data %>% group_by(verification_status) %>% summarize(count=n(), avg.IntRate = mean(int_rate, na.rm=TRUE)) %>% arrange(desc(avg.IntRate))
data.table(dataLoan)
#Question No. 5
#Average Interest Rate vs. Debt to Income (DTI) Ratio
dataByDTI <- data %>% group_by(addr_state) %>% summarize(count=n(), averageIntRate = mean(int_rate, na.rm=TRUE), medianDTI = median(dti, na.rm=TRUE)) %>% arrange(desc(medianDTI))
head(dataByDTI, 5)
tail(dataByDTI, 5)
install.packages("data.table")
library(ggplot2)
library(dplyr)
data(diamonds)
diamonds %>%
ggplot(aes(x=carat,y=price)) +
geom_point(alpha=0.5) +
facet_grid(~ cut) +
stat_smooth(method = lm, formula = y ~ poly(x,2)) +
theme_bw()
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
data(diamonds)
diamonds %>%
ggplot(aes(x=carat,y=price)) +
geom_point(alpha=0.5) +
facet_grid(~ cut) +
stat_smooth(method = lm, formula = y ~ poly(x,2)) +
theme_bw()
library(pdftools)
install.packages("pdftools")
library(pdftools)
download.file("http://www.cs.columbia.edu/~jae/3157/files/eval.pdf", "eval.pdf", mode = wb )
eval <- pdf_text("eval.pdf")
data.AvgScore.Race <- dataS %>% group_by(RACE, Score_Type) %>% summarize(avgScore = round(mean(Score, na.rm=TRUE),2)) %>% data.table()
data.AvgScore.Race <- spread(data.AvgScore.Race, Score_Type, avgScore)
data.AvgScore.Race
data.AvgScore.Race <- dataS %>% group_by(RACE, Score_Type) %>% summarize(avgScore = round(mean(Score, na.rm=TRUE),2)) %>% data.table()
#setwd
setwd("/Volumes/My Passport/Workspace/R_Files/gender-gap-mathematics")
#install.packages("ggplot2")
#Load packages
library(data.table)
library(dplyr)
library(ggplot2)
library(tidyr)
#round all the variables to 3 decimal places. Avoid putting the values in scientific notation, strongly avoid it = 999
#options(scipen=99, digits = 3)
#Import the dataset
file <- "ECLSK_ass6.csv"
data <- fread(file, data.table = FALSE, na.strings = "NULL")
#Class Declarations
class(data$C1R4RSCL) <- "numeric"
class(data$C1R4MSCL) <- "numeric"
class(data$C5R4RSCL) <- "numeric"
class(data$C5R4MSCL) <- "numeric"
#Dimensions
dim(data)
#Data Frame
str(data, max.level = 1)
data <- data %>% filter(C1R4RSCL > 0, C1R4MSCL > 0, C5R4RSCL > 0, C5R4MSCL > 0, GENDER > 0, RACE > 0, P1HMAFB > 0)
#Question No.3
data <- data %>% mutate(GENDER = plyr::mapvalues(data$GENDER, from=c(1,2), to=c("Male", "Female")),
RACE = plyr::mapvalues(data$RACE, from=c(1,2,3,4,5,6,7,8),
to=c("White", "Non-His Black or Afn Amn, Non-His", "His, Race Sepific",
"His, Race Non-Specific", "Asian", "Native Hawaiian, other PI",
"Amn Indian or ALSK Native", "More than one Race, Non-His")))
#Data Reshape:
dataS <- gather(data, Score_Type, Score, C1R4RSCL:C5R4MSCL)
head(dataS,5)
data.AvgScore.Race <- dataS %>% group_by(RACE, Score_Type) %>% summarize(avgScore = round(mean(Score, na.rm=TRUE),2)) %>% data.table()
data.AvgScore.Race <- spread(data.AvgScore.Race, Score_Type, avgScore)
data.AvgScore.Race
data.Race <- data %>% select(C5R4RSCL, C5R4MSCL, RACE) %>% group_by(RACE) %>% data.frame()
data.Race <- gather(data.Race, RACE, Score, C5R4RSCL:C5R4MSCL)
head(data.Race,5)
data.RaceDens <- ggplot(data = data.Race, aes(x=Score, ..density..)) +
labs(x="Score", y="Density", title="Density of 5th Grade Scores Categorized by Race") +
geom_density(aes(color=factor(RACE), fill=factor(RACE)), alpha=0.1) +
facet_wrap(~RACE, ncol=2)
data.RaceDens
